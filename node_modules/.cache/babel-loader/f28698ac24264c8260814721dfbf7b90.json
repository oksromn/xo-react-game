{"ast":null,"code":"import _slicedToArray from \"/Users/romnoks/RubyProjects/some-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/romnoks/RubyProjects/some-react-app/src/BoardContainer.js\";\nimport React from 'react';\nimport Square from \"./Square\";\nimport Board from \"./Board\";\nexport default class BoardContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      nextPlayerX: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (squares[i] || this.calcWinner(squares)) {\n      return;\n    }\n\n    squares[i] = this.state.nextPlayerX ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      nextPlayerX: !this.state.nextPlayerX\n    });\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n\n  calcWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const _lines$i = _slicedToArray(lines[i], 3),\n            a = _lines$i[0],\n            b = _lines$i[1],\n            c = _lines$i[2];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  handleRefresh() {\n    this.setState({\n      squares: Array(9).fill(null),\n      nextPlayerX: true\n    });\n  }\n\n  render() {\n    return React.createElement(Board, {\n      squares: this.state.squares,\n      nextPlayerX: this.state.nextPlayerX,\n      renderSquare: this.renderSquare(),\n      calcWinner: this.calcWinner(),\n      handleRefresh: this.handleRefresh(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/romnoks/RubyProjects/some-react-app/src/BoardContainer.js"],"names":["React","Square","Board","BoardContainer","Component","constructor","props","state","squares","Array","fill","nextPlayerX","handleClick","i","slice","calcWinner","setState","renderSquare","lines","length","a","b","c","handleRefresh","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Square from \"./Square\";\nimport Board from \"./Board\";\n\nexport default class BoardContainer extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            squares: Array(9).fill(null),\n            nextPlayerX: true\n        }\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if ( squares[i] || this.calcWinner(squares) ) {\n            return\n        }\n        squares[i] = this.state.nextPlayerX ? 'X' : 'O';\n        this.setState({ squares: squares, nextPlayerX: !this.state.nextPlayerX })\n    }\n\n    renderSquare(i) {\n        return (\n            <Square\n                value={ this.state.squares[i] }\n                onClick={ () => this.handleClick(i) }\n            />\n        )\n    }\n\n    calcWinner(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n        return null;\n    }\n\n    handleRefresh() {\n        this.setState({ squares: Array(9).fill(null), nextPlayerX: true })\n    }\n\n    render() {\n        return (\n            <Board\n                squares={ this.state.squares }\n                nextPlayerX={ this.state.nextPlayerX }\n                renderSquare={ this.renderSquare() }\n                calcWinner={ this.calcWinner() }\n                handleRefresh={ this.handleRefresh() }\n            />\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}