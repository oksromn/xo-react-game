{"ast":null,"code":"import _slicedToArray from \"/Users/romnoks/RubyProjects/some-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/romnoks/RubyProjects/some-react-app/src/Board.js\";\nimport React from 'react';\nimport Square from \"./Square\";\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      nextPlayerX: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (this.calcWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.nextPlayerX ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      nextPlayerX: !this.state.nextPlayerX\n    });\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n  calcWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const _lines$i = _slicedToArray(lines[i], 3),\n            a = _lines$i[0],\n            b = _lines$i[1],\n            c = _lines$i[2];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  render() {\n    const winner = this.calcWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next Player: ' + (this.state.nextPlayerX ? 'X' : 'O');\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8))));\n  }\n\n}","map":{"version":3,"sources":["/Users/romnoks/RubyProjects/some-react-app/src/Board.js"],"names":["React","Square","Board","Component","constructor","props","state","squares","Array","fill","nextPlayerX","handleClick","i","slice","calcWinner","setState","renderSquare","lines","length","a","b","c","render","winner","status"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Square from \"./Square\";\n\nexport default class Board extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            squares: Array(9).fill(null),\n            nextPlayerX: true\n        }\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if (this.calcWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.nextPlayerX ? 'X' : 'O';\n        this.setState({ squares: squares, nextPlayerX: !this.state.nextPlayerX })\n    }\n\n    renderSquare(i) {\n        return (\n            <Square\n                value={ this.state.squares[i] }\n                onClick={ () => this.handleClick(i) }\n            />\n        )\n    }\n\n    calcWinner(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n        return null;\n    }\n\n    render() {\n        const winner = this.calcWinner(this.state.squares);\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next Player: ' + (this.state.nextPlayerX ? 'X' : 'O');\n        }\n\n\n\n        return (\n            <React.Fragment>\n                <div className=\"status\">\n                    {status}\n                </div>\n                <div className=\"board\">\n                    <div className=\"board-row\">\n                        {this.renderSquare(0)}\n                        {this.renderSquare(1)}\n                        {this.renderSquare(2)}\n                    </div>\n                    <div className=\"board-row\">\n                        {this.renderSquare(3)}\n                        {this.renderSquare(4)}\n                        {this.renderSquare(5)}\n                    </div>\n                    <div className=\"board-row\">\n                        {this.renderSquare(6)}\n                        {this.renderSquare(7)}\n                        {this.renderSquare(8)}\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}